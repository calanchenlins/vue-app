# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master



stages:
- stage: build
  jobs:
  - job: 'BuildAndPushDockerImage'
    pool:
      vmImage: 'ubuntu-latest'
      name: 'Azure Pipelines'
    steps:
    - checkout: none
    - task: CmdLine@2
      inputs:
        script: |
          echo "##vso[task.setvariable variable=KB.Container.Image.Version;isOutput=true]0.2.0"
          echo "##vso[task.setvariable variable=KB.Container.Repository.Name;isOutput=true]calanchenlins-lightblog"

          echo "##vso[task.setvariable variable=KB.Container.Image.Version2;]0.2.2"
          echo "##vso[task.setvariable variable=KB.Container.Repository.Name2;]calanchenlins-lightblog2"
    - task: CmdLine@2
      inputs:
        script: |
          echo KB.Container.Repository.Name: $(KB.Container.Repository.Name)
          echo KBRepositoryName: $(KB.Container.Image.Version)
          echo KB.Container.Repository.Name2: $(KB.Container.Repository.Name2)
          echo KBRepositoryName2: $(KB.Container.Image.Version2)

  - job: 'PullAndRunContainer'
    pool:
      vmImage: 'ubuntu-latest'
      name: 'Azure Pipelines'
    dependsOn: 'BuildAndPushDockerImage'
    variables:
      KB.Container.Repository.Name: $[ dependencies.BuildAndPushDockerImage.outputs['KB.Container.Repository.Name'] ]
      KB.Container.Image.Version: $[ dependencies.BuildAndPushDockerImage.outputs['KB.Container.Image.Version'] ]
    steps:
    - checkout: none
    - task: CmdLine@2
      inputs:
        script: |
          echo KB.Container.Repository.Name: $(KB.Container.Repository.Name)
          echo KBRepositoryName: $(KB.Container.Image.Version)
          echo KB.Container.Repository.Name2: $(KB.Container.Repository.Name2)
          echo KBRepositoryName2: $(KB.Container.Image.Version2)
